package servidorAlertas.dto;


/**
* servidorAlertas/sop_corba/IPatientManagementPackage/IndicatorsDTOHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from PatientManagement.idl
* Friday, March 27, 2020 5:05:35 PM COT
*/

abstract public class IndicatorsDTOHelper
{
  private static String  _id = "IDL:sop_corba/IPatientManagement/IndicatorsDTO:1.0";

  public static void insert (org.omg.CORBA.Any a, servidorAlertas.dto.IndicatorsDTO that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static servidorAlertas.dto.IndicatorsDTO extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [6];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[0] = new org.omg.CORBA.StructMember (
            "cardiacFrequency",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[1] = new org.omg.CORBA.StructMember (
            "systolicBloodPressure",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[2] = new org.omg.CORBA.StructMember (
            "diastolicBloodpressure",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[3] = new org.omg.CORBA.StructMember (
            "breathingFrequency",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[4] = new org.omg.CORBA.StructMember (
            "oxigenSaturation",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[5] = new org.omg.CORBA.StructMember (
            "temperature",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (servidorAlertas.dto.IndicatorsDTOHelper.id (), "IndicatorsDTO", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static servidorAlertas.dto.IndicatorsDTO read (org.omg.CORBA.portable.InputStream istream)
  {
        servidorAlertas.dto.IndicatorsDTO value = new servidorAlertas.dto.IndicatorsDTO ();
    value.cardiacFrequency = istream.read_double ();
    value.systolicBloodPressure = istream.read_double ();
    value.diastolicBloodpressure = istream.read_double ();
    value.breathingFrequency = istream.read_double ();
    value.oxigenSaturation = istream.read_double ();
    value.temperature = istream.read_double ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, servidorAlertas.dto.IndicatorsDTO value)
  {
    ostream.write_double (value.cardiacFrequency);
    ostream.write_double (value.systolicBloodPressure);
    ostream.write_double (value.diastolicBloodpressure);
    ostream.write_double (value.breathingFrequency);
    ostream.write_double (value.oxigenSaturation);
    ostream.write_double (value.temperature);
  }

}
